% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RVineStructureSelectC.R
\name{RVineStructureSelectC}
\alias{RVineStructureSelectC}
\title{Simplified structure selection function}
\usage{
RVineStructureSelectC(data, familyset = 0:6, trunclevel = Inf)
}
\arguments{
\item{data}{An N x d data matrix (with uniform margins).}

\item{familyset}{An integer vector of pair-copula families to select from.
The vector has to include at least one
pair-copula family that allows for positive and one that allows for negative
dependence.  Coding of pair-copula families is the same
as in \code{\link{BiCop}}.}

\item{trunclevel}{integer; level of truncation.}
}
\value{
A list of trees, where each tree is represented in our internal data
structure. The final structure corresponding to the example code below is

\preformatted{
List of 3
 $ tree_1:List of 2
  ..$ V:List of 3
  .. ..$ d              : int 4
  .. ..$ conditionedSet : NULL
  .. ..$ conditioningSet: NULL
  ..$ E:List of 5
  .. ..$ nums           : num [1:3, 1:2] 1 2 1 2 3 4
  .. ..$ weights        : num [1:3] 0.389 0.432 0.339
  .. ..$ conditionedSet :List of 3
  .. .. ..$ : num [1:2] 1 2
  .. .. ..$ : num [1:2] 2 3
  .. .. ..$ : num [1:2] 1 4
  .. ..$ conditioningSet: NULL
  .. ..$ fits           :List of 3
  .. .. ..$ :List of 17
  .. .. .. ..- attr(*, "class")= chr "BiCop"
  .. .. ..$ :List of 17
  .. .. .. ..- attr(*, "class")= chr "BiCop"
  .. .. ..$ :List of 17
  .. .. .. ..- attr(*, "class")= chr "BiCop"
 $ tree_2:List of 2
  ..$ V:List of 2
  .. ..$ d             : int 3
  .. ..$ conditionedSet:List of 3
  .. .. ..$ : num [1:2] 1 2
  .. .. ..$ : num [1:2] 2 3
  .. .. ..$ : num [1:2] 1 4
  ..$ E:List of 5
  .. ..$ nums           : int [1:2, 1:2] 1 1 2 3
  .. ..$ weights        : num [1:2] 0.112 0.187
  .. ..$ conditionedSet :List of 2
  .. .. ..$ : num [1:2] 1 3
  .. .. ..$ : num [1:2] 2 4
  .. ..$ conditioningSet: num [1:2] 2 1
  .. ..$ fits           :List of 2
  .. .. ..$ :List of 17
  .. .. .. ..- attr(*, "class")= chr "BiCop"
  .. .. ..$ :List of 17
  .. .. .. ..- attr(*, "class")= chr "BiCop"
 $ tree_3:List of 2
  ..$ V:List of 3
  .. ..$ d              : int 2
  .. ..$ conditionedSet :List of 2
  .. .. ..$ : num [1:2] 1 3
  .. .. ..$ : num [1:2] 2 4
  .. ..$ conditioningSet: num [1:2] 2 1
  ..$ E:List of 7
  .. ..$ nums             : int [1, 1:2] 1 2
  .. ..$ weights          : num 0.126
  .. ..$ conditionedSet   :List of 1
  .. .. ..$ : num [1:2] 3 4
  .. ..$ conditioningSet  :List of 1
  .. .. ..$ : num [1:2] 1 2
  .. ..$ fits             :List of 1
  .. .. ..$ :List of 17
  .. .. .. ..- attr(*, "class")= chr "BiCop"
  .. ..$ Copula.CondData.1:List of 1
  .. .. ..$ : num [1:250] 0.0641 0.0319 0.425 0.3221 0.7609 ...
  .. ..$ Copula.CondData.2:List of 1
  .. .. ..$ : num [1:250] 0.933 0.876 0.563 0.396 0.425 ...
}
}
\description{
This is a simplified version of \code{\link{RVineStructureSelect}}. It shall
serve as a blue-print for a pure C++ implementation. Note that a dot does not
have a special meaning in R. So \code{a.b} is just a regular name as is
\code{a_b} in C++.
}
\examples{
data(daxreturns)

daxreturns <- daxreturns[1:250, 1:4]
RVM <- RVineStructureSelect(daxreturns, 1:6)
RVM

RVMC <- RVineStructureSelectC(daxreturns, 1:6)
sapply(RVMC, function(x) x$E$fits)
}

